@using MCEI.SysControlAdmin.EN.ProfessionOrStudy___EN
@model MCEI.SysControlAdmin.EN.Juventud___EN.Juventud

@{
    ViewData["Title"] = "Crear Joven";
    List<ProfessionOrStudy> professionOrStudies = ViewBag.ProfessionOrStudies as List<ProfessionOrStudy>;
}

@section Style{
    <link href="/css/Juventud/DesignCreateAndEdit.css" rel="stylesheet" />
}

<h1>Crear Nuevo Joven</h1>
<span>@ViewBag.Error</span>
<hr />
<div class="row">
    <div class="col-md-12">
        <form id="Form" asp-action="Create" onsubmit="CreateRecord(event)" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <h3>Informacion Personal</h3>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" placeholder="Ingresar" />
                    <span asp-validation-for="Name" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="LastName" class="control-label"></label>
                    <input asp-for="LastName" class="form-control" placeholder="Ingresar" />
                    <span asp-validation-for="LastName" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="DateOfBirth" class="control-label"></label>
                    <input asp-for="DateOfBirth" class="form-control" />
                    <span asp-validation-for="DateOfBirth" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Age" class="control-label"></label>
                    <input asp-for="Age" class="form-control" placeholder="Ingresar" readonly />
                    <span asp-validation-for="Age" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="Gender" class="control-label"></label>
                    <select class="form-select" name="Gender">
                        <option value="" selected>Seleccionar</option>
                        <option value="Masculino">Masculino</option>
                        <option value="Femenino">Femenino</option>
                    </select>
                    <span asp-validation-for="Gender" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CivilStatus" class="control-label"></label>
                    <select class="form-select" name="CivilStatus">
                        <option value="" selected>Seleccionar</option>
                        <option value="Soltero/a">Soltero/a</option>
                        <option value="Casado/a">Casado/a</option>
                        <option value="Divorciado/a">Divorciado/a</option>
                        <option value="Viudo/a">Viudo/a</option>
                    </select>
                    <span asp-validation-for="CivilStatus" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Phone" class="control-label"></label>
                    <input asp-for="Phone" class="form-control" placeholder="0000-0000" id="inputPhone" />
                    <span asp-validation-for="Phone" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="IdProfessionOrStudy" class="control-label"></label>
                    <select class="select2 form-select" id="IdProfessionOrStudy" name="IdProfessionOrStudy">
                        <option value="" selected>Seleccionar</option>
                        @foreach (var profesionOrStudy in professionOrStudies!)
                        {
                            <option value="@profesionOrStudy.Id">@profesionOrStudy.Name</option>
                        }
                    </select>
                    <span asp-validation-for="IdProfessionOrStudy" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="WaterBaptism" class="control-label"></label>
                    <select class="form-select" name="WaterBaptism">
                        <option value="" selected>Seleccionar</option>
                        <option value="Si, Dentro de la Mision">Si, Dentro de la Mision</option>
                        <option value="Si, Fuera de la Mision">Si, Fuera de la Mision</option>
                    </select>
                    <span asp-validation-for="WaterBaptism" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="BaptismOfTheHolySpirit" class="control-label"></label>
                    <select class="form-select" name="BaptismOfTheHolySpirit">
                        <option value="" selected>Seleccionar</option>
                        <option value="Si">Si</option>
                        <option value="No">No</option>
                    </select>
                    <span asp-validation-for="BaptismOfTheHolySpirit" class="text-danger"></span>
                </div>
            </div>
            <div class="form-group-row">
                <div class="form-group">
                    <label asp-for="Status" class="control-label"></label>
                    <select class="form-select" name="Status">
                        <option value="" selected>Seleccionar</option>
                        <option value="1">Activo</option>
                        <option value="2">Inactivo</option>
                    </select>
                    <span asp-validation-for="Status" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="CommentsOrObservations" class="control-label"></label>
                    <input asp-for="CommentsOrObservations" class="form-control" placeholder="Ingresar" />
                    <span asp-validation-for="CommentsOrObservations" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ImageData" class="control-label"></label>
                    <input type="file" class="form-control" id="imagen" name="imagen" onchange="mostrarImagen()" asp-for="ImageData" />
                    <span asp-validation-for="ImageData" class="text-danger"></span>
                </div>
            </div>
            <br />
            <div>
                <img id="imagenPreview" src="#" alt="Vista previa de la imagen" style="max-width: 100%; max-height: 200px; display: none; border: 1px solid #d3d3d3;" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Crear Joven" class="btn btn-primary" /> |
                <a class="btn btn-outline-secondary" asp-action="Index">Regresar a La Lista</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>
        function showErrorAlert(message) {
            Swal.fire({
                title: 'Error',
                text: message,
                icon: 'error'
            });
        }
        // Mostrar alerta de ViewBag.Error si es necesario
        @if (!string.IsNullOrEmpty(ViewBag.Error))
        {
            @:showErrorAlert('@ViewBag.Error');
        }
        
        // Campos de nombre, apellido y fecha de nacimiento
        const nameInput = document.querySelector('input[name="Name"]');
        const lastNameInput = document.querySelector('input[name="LastName"]');
        const birthDateInput = document.querySelector('input[name="DateOfBirth"]');

        // Función para formatear la fecha en DDMMAA
        function formatBirthDate(birthDate) {
            const day = String(birthDate.getDate() + 1).padStart(2, '0');
            const month = String(birthDate.getMonth() + 1).padStart(2, '0');
            const year = String(birthDate.getFullYear()).slice(-2);
            return `${day}${month}${year}`;
        }

        document.addEventListener("DOMContentLoaded", function () {
            // Calculo De La Edad En Base a La Fecha De Nacimiento
            const birthDateInput = document.querySelector('input[name="DateOfBirth"]');
            const ageInput = document.querySelector('input[name="Age"]');

            function calculateAge() {
                const birthDateValue = birthDateInput.value.trim();
                if (birthDateValue !== "") {
                    const birthDate = new Date(birthDateValue);
                    const currentDate = new Date();
                    let age = currentDate.getFullYear() - birthDate.getFullYear(); // Calcule la edad restando el año de nacimiento del año actual

                    // Ajusta la edad si la fecha de nacimiento aún no ha ocurrido este año
                    if (birthDate.getMonth() > currentDate.getMonth() ||
                        (birthDate.getMonth() === currentDate.getMonth() && birthDate.getDate() > currentDate.getDate())) {
                        age--;
                    }
                    ageInput.value = age; // Actualizar el campo de edad
                } else {
                    ageInput.value = ""; // Desactive el campo de edad si no se proporciona ninguna fecha de nacimiento
                }
            }

            // Insercion de (-) despues de cada 4 numeros en los numeros de telefono
            const inputPhone = document.getElementById('inputPhone');

            function formatPhoneNumber(input) {
                let phoneNumber = input.value.replace(/\D/g, ''); // Elimina cualquier carácter que no sea número
                if (phoneNumber.length > 4) {
                    phoneNumber = phoneNumber.slice(0, 4) + '-' + phoneNumber.slice(4, 8); // Formatea el número con un guion después de los primeros 4 dígitos
                }
                input.value = phoneNumber;
            }

            birthDateInput.addEventListener('change', calculateAge); // Agregar detector de eventos para el cambio en la fecha de nacimiento
            inputPhone.addEventListener('input', function (e) {
                formatPhoneNumber(e.target);
            });

            // Llamadas iniciales
            calculateAge(); // Calcular la antigüedad cuando se carga la página
        });

        // Inicializamos el Plugin de Autocompletado y Busqueda De Profesion u Oficio
        $(document).ready(function () {
            $('#IdProfessionOrStudy').select2();
        });

        // Método Para Mostrar Vista Previa De La Imagen Seleccionada
        function mostrarImagen() {
            var archivo = document.getElementById('imagen').files[0];
            var reader = new FileReader();

            reader.onload = function (e) {
                var imagenPreview = document.getElementById('imagenPreview');
                imagenPreview.src = e.target.result;
                imagenPreview.style.display = 'block';
            };
            reader.readAsDataURL(archivo);
        }

        // Alerta con SweetAlert2
        function CreateRecord(e) {
            e.preventDefault();
            const form = document.getElementById('Form');
            const inputs = document.querySelectorAll('.form-input');
            const nameFields = ['Name', 'LastName'];
            const regex = /^[A-ZÑa-zñáéíóúÁÉÍÓÚ. ]+$/;

            let isValid = true;

            // Validar que los campos nameFields solo contengan letras, punto y espacios
            nameFields.forEach((field) => {
                const input = document.querySelector(`#${field}`);
                if (!regex.test(input.value)) {
                    isValid = false;
                }
            });

            // Si la validación falla, muestra una alerta advirtiendo al usuario
            if (!isValid) {
                Swal.fire({
                    title: '!Advertencia!',
                    text: 'Ciertos Campos Solo Deben Tener Letras, Revisa Tu Ficha',
                    icon: 'warning',
                    confirmButtonText: 'Aceptar'
                });
                return;
            }

            // Si todos los campos son válidos, muestra la alerta de confirmación
            Swal.fire({
                title: '¿Guardar Nuevo Joven?',
                icon: 'question',
                showCancelButton: true,
                confirmButtonText: 'Sí, Guardar Joven'
            }).then((result) => {
                if (result.isConfirmed) {
                    form.submit();
                }
            });
        }
    </script>
}
